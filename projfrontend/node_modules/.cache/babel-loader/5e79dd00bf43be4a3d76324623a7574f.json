{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern\\\\projfrontend\\\\src\\\\core\\\\PaypalCheckout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { loadCart, cartEmpty } from \"./helper/CartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getmeToken, processPayment } from \"./helper/paymentHelper\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { count } from \"../../../projbackend/models/user\";\n\nconst PaypalCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n  let effect1 = false;\n  let token = isAuthenticated() && isAuthenticated().token;\n\n  let userId = isAuthenticated().user._id;\n\n  if (userId) {\n    effect1 = true;\n  }\n\n  const getToken = (userId, token) => {\n    console.log(\"grttoekn called with \", userId);\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION \", info);\n\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({\n          clientToken: clientToken\n        });\n      }\n    });\n  };\n\n  const showBrain = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, info.clientToken !== null && products.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DropIn, {\n      options: {\n        authorization: info.clientToken\n      },\n      onInstance: instance => info.instance = instance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-block btn-success\",\n      onClick: onPurchase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Buy\")) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }\n    }, \"please login or add something to cart\"));\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const onPurchase = () => {\n    setInfo({\n      loading: true\n    });\n    let nonce;\n    let getNonce = info.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        setInfo({ ...info,\n          loading: false,\n          success: response.success\n        });\n        console.log(\"PAYMENT SUCCESS\");\n        const orderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          count: products.length\n        };\n        createOrder(userId, token, orderData).then(response => {\n          console.log(response);\n        });\n        cartEmpty(() => {\n          console.log(\"did we got a crash\");\n        });\n        setReload(!reload);\n      }).catch(error => {\n        setInfo({\n          loading: false,\n          success: false\n        });\n        console.log(\"PAYMENT FAILED\");\n      });\n    });\n  };\n\n  const getAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"test bill=\", getAmount()), showBrain());\n};\n\nexport default PaypalCheckout;","map":{"version":3,"sources":["E:/mern/projfrontend/src/core/PaypalCheckout.js"],"names":["React","useState","useEffect","loadCart","cartEmpty","Link","getmeToken","processPayment","createOrder","isAuthenticated","DropIn","count","PaypalCheckout","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","effect1","token","userId","user","_id","getToken","console","log","then","showBrain","length","authorization","onPurchase","nonce","getNonce","requestPaymentMethod","data","paymentData","paymentMethodNonce","amount","getAmount","response","orderData","transaction_id","transaction","id","catch","map","p","price"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { loadCart, cartEmpty } from \"./helper/CartHelper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getmeToken, processPayment } from \"./helper/paymentHelper\";\r\nimport { createOrder } from \"./helper/OrderHelper\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\nimport { count } from \"../../../projbackend/models/user\";\r\n\r\n\r\n\r\nconst PaypalCheckout=({products,setReload=f=>f,reload=undefined})=>{\r\n\r\n    const [info,setInfo]=useState({\r\n        loading:false,\r\n        success:false,\r\n        clientToken:null,\r\n        error:\"\",\r\n        instance:{}\r\n    });\r\n    let effect1=false;\r\n\r\n    let token = isAuthenticated() && isAuthenticated().token;\r\n    let userId = isAuthenticated().user._id;\r\n    if(userId){\r\n        effect1=true\r\n    }\r\n\r\n\r\n\r\n    const getToken=(userId,token)=>{\r\n        console.log(\"grttoekn called with \",userId);\r\n        getmeToken(userId,token).then(info =>{\r\n            console.log(\"INFORMATION \",info);\r\n            if(info.error){\r\n                setInfo({...info,error: info.error})\r\n            }else{\r\n                const clientToken=info.clientToken;\r\n                setInfo({clientToken:clientToken})\r\n            }\r\n        })\r\n    }\r\n\r\n    const showBrain=()=>{\r\n        return(\r\n            <div>\r\n                {info.clientToken !==null && products.length>0 ?(\r\n                  <div>\r\n          <DropIn\r\n            options={{ authorization: info.clientToken }}\r\n            onInstance={(instance) => (info.instance = instance)}\r\n          />\r\n          <button className=\"btn btn-block btn-success\" onClick={onPurchase}>Buy</button>\r\n        </div>\r\n                ): <h3>please login or add something to cart</h3> }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getToken(userId,token);\r\n    },[])\r\n\r\n\r\n    const onPurchase=()=>{\r\n        setInfo({loading:true})\r\n        let nonce;\r\n        let getNonce=info.instance\r\n        .requestPaymentMethod()\r\n        .then(data=>{\r\n            nonce=data.nonce\r\n            const paymentData={\r\n                paymentMethodNonce:nonce,\r\n                amount:getAmount()\r\n            };\r\n            processPayment(userId,token,paymentData)\r\n            .then(response =>{\r\n                setInfo({...info,loading:false,success:response.success})\r\n                console.log(\"PAYMENT SUCCESS\");\r\n                const orderData={\r\n                    products:products,\r\n                    transaction_id:response.transaction.id,\r\n                    amount:response.transaction.amount,\r\n                    count:products.length\r\n                }\r\n                createOrder(userId,token,orderData)\r\n                .then(response=>{\r\n                    console.log(response)\r\n                })\r\n                cartEmpty(()=>{\r\n                    console.log(\"did we got a crash\");\r\n                })\r\n                setReload(!reload);\r\n            })\r\n            .catch(error =>{\r\n                setInfo({loading:false,success:false})\r\n                console.log(\"PAYMENT FAILED\")\r\n            })\r\n        })\r\n    }\r\n    const getAmount=()=>{\r\n        let amount=0;\r\n        products.map(p=>{\r\n            amount=amount+p.price\r\n        })\r\n        return amount;\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3>test bill={getAmount()}</h3>\r\n            {showBrain()}\r\n        </div>\r\n    )\r\n}\r\nexport default PaypalCheckout;"]},"metadata":{},"sourceType":"module"}