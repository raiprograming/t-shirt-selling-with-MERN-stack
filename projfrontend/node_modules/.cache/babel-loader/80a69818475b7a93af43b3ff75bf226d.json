{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern\\\\projfrontend\\\\src\\\\admin\\\\UpdateCategory.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Base from \"../core/Base\";\nimport { updateCategory } from \"./helper/adminapicall\";\nimport { isAuthenticated } from \"../auth/helper\";\n\nconst UpdateCategory = ({\n  match\n}) => {\n  const [name, setName] = useState(\"\");\n  const [nameUpdated, setNameUpdated] = useState(false);\n  const {\n    user,\n    token\n  } = isAuthenticated();\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: true ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, nameUpdated, \" updated successfully\"));\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setName(value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    updateCategory(match.params.categoryId, user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setNameUpdated(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Base, {\n    title: \"update category\",\n    description: \"update categories here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container bg-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"admin home\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, successMessage(), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"enter new name of category\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn mt-4 ml-5 text-white btn-lg bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"update\")))));\n};\n\nexport default UpdateCategory;","map":{"version":3,"sources":["E:/mern/projfrontend/src/admin/UpdateCategory.js"],"names":["React","useState","Link","Base","updateCategory","isAuthenticated","UpdateCategory","match","name","setName","nameUpdated","setNameUpdated","user","token","successMessage","display","handleChange","event","value","target","onSubmit","preventDefault","params","categoryId","_id","then","data","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AACA,MAAMC,cAAc,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC5B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACS,WAAD,EAAaC,cAAb,IAA6BV,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM;AAACW,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAaR,eAAe,EAAlC;;AAGA,QAAMS,cAAc,GAAG,mBACrB;AACE,IAAA,SAAS,EAAC,0BADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,OAAO,EAAP,GAAY;AAAvB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,WAAL,0BAJF,CADF;;AAQI,QAAMM,YAAY,GAACC,KAAK,IAAE;AACtB,UAAMC,KAAK,GAACD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACAT,IAAAA,OAAO,CAACS,KAAD,CAAP;AACH,GAHD;;AAKA,QAAME,QAAQ,GAAEH,KAAD,IAAS;AACpBA,IAAAA,KAAK,CAACI,cAAN;AACAjB,IAAAA,cAAc,CAACG,KAAK,CAACe,MAAN,CAAaC,UAAd,EAAyBX,IAAI,CAACY,GAA9B,EAAkCX,KAAlC,EAAwC;AAACL,MAAAA;AAAD,KAAxC,CAAd,CACCiB,IADD,CACMC,IAAI,IAAE;AACR,UAAGA,IAAI,CAACC,KAAR,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,OAFD,MAGI;AACAhB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH;AACJ,KARD;AAUH,GAZD;;AAcJ,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,iBAAZ;AAA8B,IAAA,WAAW,EAAC,wBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,cAAc,EADnB,eAEE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAC,MAArC;AACA,IAAA,QAAQ,EAAEE,YADV;AAEA,IAAA,WAAW,EAAER,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAQ,IAAA,SAAS,EAAC,yCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAHF,CAJF,CADF,CADF;AAsBH,CAvDD;;AAyDA,eAAeF,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Base from \"../core/Base\";\r\nimport {updateCategory} from \"./helper/adminapicall\"\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nconst UpdateCategory=({match})=>{\r\n    const [name,setName]=useState(\"\");\r\n    const [nameUpdated,setNameUpdated]=useState(false);\r\n    const {user,token}=isAuthenticated();\r\n\r\n\r\n    const successMessage = () => (\r\n      <div\r\n        className=\"alert alert-success mt-3\"\r\n        style={{ display: true ? \"\" : \"none\" }}\r\n      >\r\n        <h4>{nameUpdated} updated successfully</h4>\r\n      </div>\r\n    );\r\n        const handleChange=event=>{\r\n            const value=event.target.value;\r\n            setName(value);\r\n        }\r\n\r\n        const onSubmit=(event)=>{\r\n            event.preventDefault();\r\n            updateCategory(match.params.categoryId,user._id,token,{name})\r\n            .then(data=>{\r\n                if(data.error){\r\n                    console.log(data.error)\r\n                }\r\n                else{\r\n                    setNameUpdated(true);\r\n                }\r\n            })            \r\n\r\n        }\r\n\r\n    return (\r\n      <Base title=\"update category\" description=\"update categories here\">\r\n        <div className=\"container bg-info\">\r\n          <Link to=\"/admin/dashboard\">\r\n            <button className=\"btn btn-success btn-lg\">admin home</button>\r\n          </Link>\r\n          <div className=\"row p-3\">\r\n              {successMessage()}\r\n            <h3 className=\"px-4\">enter new name of category</h3>\r\n            <div className=\"container px-5\">\r\n              <input className=\"form-control\" type=\"text\" \r\n              onChange={handleChange}\r\n              placeholder={name}\r\n              ></input>\r\n              <button className=\"btn mt-4 ml-5 text-white btn-lg bg-dark\"\r\n              \r\n              >update</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Base>\r\n    );\r\n}\r\n\r\nexport default UpdateCategory;"]},"metadata":{},"sourceType":"module"}